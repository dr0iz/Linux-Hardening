

## Compiling a .tar

#extract the .tar

tar -xzf packageName

#check for any special features 

./configure --help

#install to a certain location

./configure --prefix=/home/username  (usually /usr/local is default)

#build the software

make

#test program see if compiled correctly

make check 

make test

#if you see a ./program it will run a series of tests and report whether it thinks that the
program will run correctly

#install program

make install


That's all :) test program ...


-------------------------------------------------------------------------------------------------------------------------

## see what shared libraries a program uses and their location

ldd /pathOfProgram
 
#after installing shared libraries run this makes sure the system can find them:

sudo ldconfig
-------------------------------------------------------------------------------------------------------------------------
## top command 

sort by memory and not default cpu:

Shift+M

press "?" to get a list of cmds 

press "f" for sorting the various fields 

-------------------------------------------------------------------------------------------------------------------------
##find something then delete it:

sudo find / -iname nameHere -exec rm {} \;





## Debian goodies cmds ~

check-enhancements
which-pkg-broke
dpigs
----------------------------------------


## redirect all DNS queries to 1.1.1.1

iptables -t nat -A OUTPUT -p udp --dport 53 -j DNAT --to-destination 1.1.1.1
iptables -t nat -A OUTPUT -p tcp --dport 53 -j DNAT --to-destination 1.1.1.1

Remove rules: iptables -t nat -D OUTPUT -p udp --dport 53 -j DNAT --to-destination 1.1.1.1
iptables -t nat -D OUTPUT -p tcp --dport 53 -j DNAT --to-destination 1.1.1.1

----------------------------------------------------------------------------------

Look for suspicious strings:

$ sudo chkrootkit -x | less

rkhunter --propupd

rkhunter --check --sk
--------------------------------------------------------

## use the "sed" command for ex. remove hello world from a file:

sed 's/hello/world/' input.txt > output.txt

or don't output the file and edit it in place using the "i" switch:

 sed -i 's/hello/world/' file.txt

# print only line 45: 

sed -n '45p' file.txt

----------------------------------------------------------------------------------------------------------

# check mitigations are enabled or not 

fgrep -r '' /sys/devices/system/cpu/vulnerabilities

grep -H '' /sys/devices/system/cpu/vulnerabilities/*


rkhunter --check --sk

netstat -tanp | grep LISTEN



# make sure all world writable directories have sticly bit set :
find PART -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print
(if found then add the sticky bit): chmod +t /dir


# Find Unauthorized World-Writable Files

find PART -xdev -type f -perm -0002 -print

if found fix by: chmod o-w fileName


# Unauthorized SUID/SGID System Executables

find PART -xdev \( -perm -4000 -o -perm -2000 \) -type f -print

if found fix: chmod -s file


# find and repair any Unowned files

find PART -xdev \( -nouser -o -nogroup \) -print

# Verify that All World-Writable Directories Have Proper Ownership

find PART -xdev -type d -perm -0002 -uid +500 -print


To see active accounts, run:

cat /etc/passwd | egrep -v '\/false|\/nologin|\/shutdown|\/halt'

You can disable account using this command:

usermod -s /usr/sbin/nologin "username"       (without quotes)



find /home/stvn/ -cmin 10 -print (files changed in past 10 min) 

find / -type f -name *.tar.gz -size +100M -exec ls -l {} \;

logwatch --range All --archives --detail Med


sudo fstrim -av   (performs a Trim on Disk)

rm -rfv ~/.cache/thumbnails  (deletes thumbmails)

-----------------------------------------------------

sudo ausearch -f PATH (example sudo ausearch -f /home/stv/Passwords) or sudo ausearch -f passwd

sudo service auditd rotate


aureport -l -i -ts yesterday -te today

aureport --anomaly

If access violations stand out, review them with:
ausearch --key access --raw

aureport --file --summary

To review what executables are doing:
ausearch --key access --raw

aureport -x --summary
-----------------------------------------------------------

sudo dpkg -i packageName  (installs package)


netstat -tulpn (listening ports)
ss -tulpn

kill PID
killall -9 program_name

nmap -v -sT localhost  (open port scan)
sudo nmap -v -sS localhost  (SYN scan)

df -h (disk file sys info)

systemctl list-units | grep service

date
uname –a
hostname
cat /proc/version
lsmod

Account Information
cat /etc/shadow
cat /etc/sudoers
cat /etc/sudoers.d/*
cut -d: -f1 /etc/passwd
getent passwd | cut -d: -f1
compgen -u

Current user
whoami
who
id

Last logged on users
last
lastb
cat /var/log/auth.log

Initialisation Files
cat /etc/bash.bashrc
cat ~/.bash_profile 
cat ~/.bashrc 

Environment and Startup Programs
cat /etc/profile
ls /etc/profile.d/
cat /etc/profile.d/*

Scheduled Tasks
ls /etc/cron.*
ls /etc/cron.*/*
cat /etc/cron.*/*
cat /etc/crontab

SSH Keys and Authorised Users
cat /etc/ssh/sshd_config
Note: This specifies where the SSH daemon will look for keys. Generally this will be as below.
ls /home/*/.ssh/*
cat /home/*/.ssh/id_rsa.pub
cat /home/*/.ssh/authorized_keys

Sudoers File (who who can run commands as a different user)
cat /etc/sudoers

Configuration Information
ls /etc/*.d
cat /etc/*.d/*

Network Connections / Socket Stats
netstat
netstat -apetul
netstat -plan
netstat -plant
ss
ss -l
ss -ta
ss -tp

IP Table Information
ls /etc/iptables
cat /etc/iptables/*.v4
cat /etc/iptables/*.v6
iptables -L

Network Configuration
ifconfig -a

Browser Plugin Information
ls -la ~/.mozilla/plugins
ls -la /usr/lib/mozilla/plugins
ls -la /usr/lib64/mozilla/plugins
ls -la ~/.config/google-chrome/Default/Extensions/

Kernel Modules and Extensions/
ls -la /lib/modules/*/kernel/*

Process Information
ps <simple	list	output	threads	misc	all>’
ps -s
ps -l
ps -o
ps -t
ps -m
ps -a
top

Search files recursively in directory for keyword
grep -H -i -r "password" /

Process Tree
ps -auxwf

Open Files and space usage
lsof
du

Pluggable Authentication Modules (PAM)
cat /etc/pam.d/sudo
cat /etc/pam.conf
ls /etc/pam.d/

Disk / Partition Information
fdisk -l

System Calls / Network Traffic
strace -f -e trace=network -s 10000 <PROCESS WITH ARGUMENTS>;
strace -f -e trace=network -s 10000 -p <PID>;

Detailed Process Information
ls -al /proc/[PID]

CWD = Current Working Directory of Malware
EXE = Binary location and whether it has been deleted
Most Common Timestamp = When process was created
Recover deleted binary which is currently running

cp /proc/[PID]/exe /[destination]/[binaryname]
Capture Binary Data for Review
cp /proc/[PID]/ /[destination]/[PID]/

Binary hash information
sha1sum /[destination]/[binaryname]
md5sum /[destination]/[binaryname]

Process Command Line Information
cat /proc/[PID]/cmdline
cat /proc/[PID]/comm
Note:Significant differences in the above 2 outputs and the specified binary name under /proc/[PID]/exe can be indicative of malicious software attempting to remain undetected.

Process Environment Variables (incl user who ran binary)
strings /proc/[PID]/environ
cat /proc/[PID]/environ

Process file descriptors/maps (what the process is ‘accessing’ or using)
ls -al /proc/[PID]/fd
cat /proc/[PID]/maps

Process stack/status information (may reveal useful elements)
cat /proc/[PID]/stack
cat /proc/[PID]/status

Deleted binaries which are still running
ls -alr /proc/*/exe 2> /dev/null |  grep deleted

Process Working Directories (including common targeted directories)
ls -alr /proc/*/cwd
ls -alr /proc/*/cwd 2> /dev/null | grep tmp
ls -alr /proc/*/cwd 2> /dev/null | grep dev
ls -alr /proc/*/cwd 2> /dev/null | grep var
ls -alr /proc/*/cwd 2> /dev/null | grep home

Hidden Directories and Files
s

Immutable Files and Directories (Often Suspicious)
lsattr / -R 2> /dev/null | grep "\----i"

SUID/SGID and Sticky Bit Special Permissions
find / -type f \( -perm -04000 -o -perm -02000 \) -exec ls -lg {} \;

File and Directories with no user/group name
find / \( -nouser -o -nogroup \) -exec ls -lg  {} \;

File types in current directory
file * -p

Executables on file system
find / -type f -exec file -p '{}' \; |  grep ELF

Hidden Executables on file system
find / -name ".*" -exec file -p '{}' \; | grep ELF

Files modified within the past day
find / -mtime -1

Persistent Areas of Interest
/etc/rc.local
/etc/initd
/etc/rc*.d
/etc/modules
/etc/cron*
/var/spool/cron/*
/usr/lib/cron/
/usr/lib/cron/tabs

Audit Logs
ls -al /var/log/*
ls -al /var/log/*tmp
utmpdump /var/log/btmp
utmpdump /var/run/utmp
utmpdump /var/log/wtmp

Installed Software Packages
ls /usr/bin/
ls /usr/local/bin/

history | tail -50

sudo iptables -L -n -v

lsof -i

df

mount | column -t

fuser -va /home

ps -ef|grep boot

sysctl -a

who

tail -n 500 /var/log/messages

iostat 2

vmstat 2

mpstat 1

sysctl dev

sysctl -a | grep mem

sysctl vm

free -m

cat /proc/cpuinfo

cat /proc/meminfo

ss -tup

netstat -plant

sudo apt update && apt upgrade -y && apt dist-upgrade -y && reboot

grep MemTotal /proc/meminfo

ip -a
-------------------------------------------------------------------------------------------------------------------------

## Adding users and or groups

sudo useradd john_doe -m -s /bin/bash -g sudo -G adm,systemd-journal -c 'Johnny Does'

#m to make /home ---- s to set bash ----- g to add to primary group-----G add to secondary groups ----- c for comments like real name or personal info and use quotes if there are any spaces whitespace between words or name single quotes or double doesn't matter...


#lastly assign a password:

sudo passwd john_doe

#useradd does not make a home by default but adduser does :) adduser is a Perl wrapper for useradd




sudo adduser "$USER" adm

sudo adduser "$USER" systemd-journal

sudo adduser "$USER" sudo

groupadd ...

usermod -a -G adm,sudo stv


sudo find / -group john_doe -exec chgrp newGroup {} \;   (if user changes group then find all their files and rename to the new group)

-------------------------------------------------------------------------------------------------------------------------

# view home permissions 

ls -ld /home/USER 

**remove group writeable and world readable:

chmod g-w /home/stv

chmod o-rwx /home/stv  (basically chmod 750)

umask 077

sudo chown -Rc $USER:$USER $HOME  (own your home)
-------------------------------------------------------

# harden cron or tighten up its availibility 

chmod 600 /etc/crontab

chmod 600 /etc/anacrontab

# Restrict the permission on all system crontab directories:

cd /etc

chown -R root:root cron.hourly cron.daily cron.weekly cron.monthly cron.d

chmod -R go-rwx cron.hourly cron.daily cron.weekly cron.monthly cron.d

chown root:root /var/spool/cron

chmod -R go-rwx /var/spool/cron

sudo chmod -R o-rxw /boot
sudo chmod -R o-rxw /etc/snmp
sudo chmod -R o-rxw /etc/apache2
sudo chmod -R o-rxw /etc/postfix
sudo chmod -R o-rxw /etc/cron.daily
sudo chmod 644 /etc/passwd
sudo chmod 640 /etc/passwd-
sudo chmod 644 /etc/shadow
sudo chmod 640 /etc/shadow-
sudo chmod 600 /etc/gshadow
sudo chmod 640 /etc/sysctl.conf
sudo chmod 640 /etc/logrotate.conf
sudo chmod 600 /var/log/faillog
sudo chmod 750 /var/log/openvpn
sudo chmod 640 /etc/fstab
sudo chown root:root /etc/shadow
sudo chown root:root /etc/shadow-
sudo chown root:root /etc/gshadow
sudo chmod -R o-rxw /boot
sudo chmod 640 /root/.bashrc
sudo chmod 640 /root/.profile
sudo chmod -R o-rxw /home/stv


---------------------------------------------------------------------------------------------------------

sudo aa-status

ps auxZ | grep -v '^unconfined'

sudo grub-mkconfig -o /boot/grub/grub.cfg   (install microcode for amd-intel)

systemctl status (service)

systemctl enable --now (service)

systemctl list-unit-files --type=service --state=enabled

systemctl list-unit-files --type=service --state=disabled

systemctl list-unit-files --type=service --state=enabled,disabled

systemctl list-units --type=service --state=running

systemctl list-units --type=service --state=failed

ps -aux

• lsmod – Displays a list of all loaded modules

• modinfo <module name> - Displays information about a specific module

• rmmod <module name> – Will try to unload a module (if not used)

lsof -i +M

netstat -at

cat /etc/crontab
ls /etc/cron.*
crontab –u root –l
------------------------------------------------------------------------------------------------------------------

## fcheck -ac (rebuild db) 

fcheck -a (reads db)


fcheck -acisxr (build db more options enabled) <=========install software or remove re-run 

fcheck -aisxr (same as above except leave out the "c" because we are checking not building the db over again) 

----------------------------------------------------------------------------------------------------------------------
rm -rfv ~/.cache/thumbnails

find /tmp -type f \( ! -user root \) -atime +1 -delete



# check mitigations are enabled or not 

fgrep -r '' /sys/devices/system/cpu/vulnerabilities

grep -H '' /sys/devices/system/cpu/vulnerabilities/*


rkhunter --check --sk


netstat -tanp | grep LISTEN



# make sure all world writable directories have sticly bit set :
find PART -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print
(if found then add the sticky bit): chmod +t /dir


# Find Unauthorized World-Writable Files

find PART -xdev -type f -perm -0002 -print

if found fix by: chmod o-w fileName


# Unauthorized SUID/SGID System Executables

find PART -xdev \( -perm -4000 -o -perm -2000 \) -type f -print

if found fix: chmod -s file


# find and repair any Unowned files

find PART -xdev \( -nouser -o -nogroup \) -print

# Verify that All World-Writable Directories Have Proper Ownership

find PART -xdev -type d -perm -0002 -uid +500 -print


To see active accounts, run:

cat /etc/passwd | egrep -v '\/false|\/nologin|\/shutdown|\/halt'

You can disable account using this command:

usermod -s /usr/sbin/nologin "username"       (without quotes)



find /home/stvn/ -cmin 10 -print (files changed in past 10 min) 

find / -type f -name *.tar.gz -size +100M -exec ls -l {} \;

logwatch --range All --archives --detail Med
